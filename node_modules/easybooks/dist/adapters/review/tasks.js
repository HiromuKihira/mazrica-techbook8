"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const unified_1 = __importDefault(require("unified"));
const vfile_1 = __importDefault(require("vfile"));
const js_yaml_1 = __importDefault(require("js-yaml"));
const review_stringify_1 = __importDefault(require("../../easybooks-ast/review-stringify"));
const markdown_1 = require("../../easybooks-ast/markdown");
const review = unified_1.default().use(review_stringify_1.default);
exports.convert = async (files, src, dest) => {
    const markdownText = await files.readFileFromProject(src);
    const root = await markdown_1.parseMarkdown(markdownText);
    await markdown_1.importSource(root);
    await files.writeFileToDisk(dest, review.stringify(root, vfile_1.default({ data: path_1.default.basename(dest).replace(/\.[a-zA-Z0-9]+$/, '') })));
};
exports.writeYaml = async (files, filename, data) => {
    await files.writeFileToDisk(filename, js_yaml_1.default.dump(data));
};
exports.createCatalog = (files, catalog) => {
    const tasks = [];
    Object.keys(catalog).map(key => {
        catalog[key] = catalog[key].map(filename => {
            if (filename.endsWith('.md')) {
                const reviewFilename = filename.replace(/\.md$/, '.re');
                tasks.push(exports.convert(files, filename, reviewFilename));
                return reviewFilename;
            }
            else {
                const copy = async () => {
                    await files.exportFileToDisk(filename);
                };
                tasks.push(copy());
                return filename;
            }
        });
    });
    return { catalog, tasks };
};
exports.copyTemplates = async (files, templates) => {
    if (templates.length === 0) {
        return;
    }
    await Promise.all(templates.map(dir => files.exportFilesToDiskRecursive(dir)));
};
//# sourceMappingURL=tasks.js.map